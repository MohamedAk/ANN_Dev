(function(){"use strict";angular.module("annPortalApp").config(function(n){n.state({name:"admin.procedure-filter-mappings",url:"/procedure-filter-mappings",templateUrl:"app/admin/procedure-filter-mappings/procedure-filter-mappings.html",controller:"Admin.ProcedureFilterMappingsCtrl",abstract:!0,children:[{name:"index",url:"",templateUrl:"app/admin/procedure-filter-mappings/procedure-filter-mappings.index.html",controller:"Admin.ProcedureFilterMappingsCtrl.IndexCtrl"},{name:"edit",url:"/:userId/edit",templateUrl:"app/admin/procedure-filter-mappings/procedure-filter-mappings.edit.html",controller:"Admin.ProcedureFilterMappingsCtrl.EditCtrl"},]})}).controller("Admin.ProcedureFilterMappingsCtrl",function(n,t,i){function u(){window.location.href.indexOf("/new")>0?(r.subTitle="New Filter Mapping",r.showCreateBtn=!1):window.location.href.indexOf("/edit")>0?(r.subTitle="Edit Filter Mapping",r.showCreateBtn=!1):(r.subTitle=undefined,r.showCreateBtn=!0)}var r=n.vm={};i.$on("$stateChangeSuccess",function(){u()});u()}).controller("Admin.ProcedureFilterMappingsCtrl.IndexCtrl",function(n){function i(){n.mainGridOptions={dataSource:{type:"json",transport:{read:{url:function(){return"http://localhost:9000/Portal/api/Metadata/GetProcedureLevels"}}},pageSize:10,serverPaging:!0,serverSorting:!0,serverFiltering:!0,serverGrouping:!0,serverAggregates:!0,schema:{data:"data",total:"total"}},selectable:!1,sortable:!1,pageable:!1,scrollable:{virtual:!0},columns:[{field:"name",title:"Procedure Name",width:"25%"},{field:"procedureLevel1",title:"Level 1",width:"20%",template:"{{dataItem.procedureLevel1.name}}"},{field:"procedureLevel1",title:"Level 2",width:"20%",template:"{{dataItem.procedureLevel2.name}}"},{field:"procedureLevel1",title:"Level 3",width:"20%",template:"{{dataItem.procedureLevel3.name}}"},{field:"procedureLevel1",title:"Level 4",width:"20%",template:"{{dataItem.procedureLevel4.name}}"}]}}var t=n.vm={newItem:{level1:{},level2:{},level3:{},level4:{},breastImplant:{}}};n.curTab=1;t.isDupplicateSequence=null;t.isNotCompletedSequence=null;i();n.addBreastImplant=function(n){n.Name&&(_.some(t.breastImplants,function(t){return t.Name&&t.Name.toLowerCase()===n.Name.toLowerCase()})||(t.breastImplants.push({Name:n.Name}),n.Name=""))};n.removeBreastImplant=function(n){_.remove(t.breastImplants,n)}}).controller("Admin.ProcedureFilterMappingsCtrl.EditCtrl",function(n,t,i,r,u,f,e){function s(n,t,r,u,s){var h=e.defer(),c=t!=null?t.id:null,l=r!=null?r.id:null,a=u!=null?u.id:null,v=s!=null?s.id:null;return f.isDuplicateProcedureLevelSequence(n,c,l,a,v).then(function(n){o.isDupplicateSequence=n.data;h.resolve(n.data)}).catch(function(n,t){console.log(n);t==-1?i.error({title:"",body:"Cannot perform the function due to network failure."}):i.error({title:"",body:"Cannot perform the function Error occured."})}),h.promise}function h(){var t=o.newProcedureLevels[0].procedureLevel1!=null?o.newProcedureLevels[0].procedureLevel1.id:"",i=o.newProcedureLevels[0].procedureLevel2!=null?o.newProcedureLevels[0].procedureLevel2.id:"",r=o.newProcedureLevels[0].procedureLevel3!=null?o.newProcedureLevels[0].procedureLevel3.id:"",u=o.newProcedureLevels[0].procedureLevel4!=null?o.newProcedureLevels[0].procedureLevel4.id:"",n=""+t+""+i+""+r+""+u+"";return-1!=o.procedurePatterns.indexOf(n)?(o.isDupplicateSequence=!0,!0):(o.isDupplicateSequence=!1,o.procedurePatterns.unshift(n),!1)}function c(){return o.newProcedureLevels[0].name==null||o.newProcedureLevels[0].name==""||o.newProcedureLevels[0].procedureLevel1==null||o.newProcedureLevels[0].procedureLevel1!=null&&o.newProcedureLevels[0].procedureLevel1.id==""||o.newProcedureLevels[0].procedureLevel2!=null&&o.newProcedureLevels[0].procedureLevel2.id==""||o.newProcedureLevels[0].procedureLevel3!=null&&o.newProcedureLevels[0].procedureLevel3.id==""||o.newProcedureLevels[0].procedureLevel4!=null&&o.newProcedureLevels[0].procedureLevel4.id==""?!1:!0}var o=n.vm={};n.init=function(){o.newProcedureLevels=[{procedure:{},procedureLevel1:{},procedureLevel2:{},procedureLevel3:{},procedureLevel4:{}}];o.newProcedureLevels=o.newProcedureLevels||[];o.procedurePatterns=o.procedurePatterns||[]};n.save=function(){};n.cancel=function(){};n.level1Datasource={type:"webapi",serverFiltering:!0,transport:{read:{url:function(){return"api/Metadata/ProcedureLevelFilterByText/1"}},parameterMap:function(n){if(Object.keys(n).length!=0)return{filter:n.filter.filters[0].value}}}};n.level2Datasource={type:"webapi",serverFiltering:!0,transport:{read:{url:function(){return"api/Metadata/ProcedureLevelFilterByText/2"}},parameterMap:function(n){if(Object.keys(n).length!=0)return{filter:n.filter.filters[0].value}}}};n.level3Datasource={type:"webapi",serverFiltering:!0,transport:{read:{url:function(){return"api/Metadata/ProcedureLevelFilterByText/3"}},parameterMap:function(n){if(Object.keys(n).length!=0)return{filter:n.filter.filters[0].value}}}};n.level4Datasource={type:"webapi",serverfiltering:!0,transport:{read:{url:function(){return"api/metadata/ProcedureLevelFilterByText/4"}},parametermap:function(n){if(object.keys(n).length!=0)return{filter:n.filter.filters[0].value}}}};n.addNewProcedureLevel=function(){if(o.newProcedureLevels.length>0)if(c()){if(!h()){var n=s(o.newProcedureLevels[0].name,o.newProcedureLevels[0].procedureLevel1,o.newProcedureLevels[0].procedureLevel2,o.newProcedureLevels[0].procedureLevel3,o.newProcedureLevels[0].procedureLevel4);e.all([n]).then(function(){o.isDupplicateSequence||(o.isNotCompletedSequence=!1,o.newProcedureLevels.unshift({id:0,name:null,procedureLevel1:null,procedureLevel2:null,procedureLevel3:null,procedureLevel4:null}))})}}else o.isNotCompletedSequence=!0;else o.newProcedureLevels.length==0&&(o.newProcedureLevels=[{id:0,name:null,procedureLevel1:null,procedureLevel2:null,procedureLevel3:null,procedureLevel4:null}])};n.saveProcedureLevelSequences=function(n){if(c()||!o.isDupplicateSequence){if(!h()){var t=s(o.newProcedureLevels[0].name,o.newProcedureLevels[0].procedureLevel1,o.newProcedureLevels[0].procedureLevel2,o.newProcedureLevels[0].procedureLevel3,o.newProcedureLevels[0].procedureLevel4);e.all([t]).then(function(){o.isDupplicateSequence?(o.isNotCompletedSequence=!0,o.isDupplicateSequence=!1):f.saveProcedureLevelSequences(n).then(function(t){var r=t.data;o.isNotCompletedSequence=!1;o.isDupplicateSequence=!1;i.success({title:"",body:"Procedure level sequence added successfully."});_.forEach(n,function(n){o.procedurelevels.unshift(n)});o.newProcedureLevels=[{id:0,name:null,procedureLevel1:null,procedureLevel2:null,procedureLevel3:null,procedureLevel4:null}]}).catch(function(n){console.log(n)})})}}else o.isNotCompletedSequence=!0};n.removeNewProcedureLevel=function(n){o.newProcedureLevels.splice(n,1)}})})();
//# sourceMappingURL=procedure-filter-mappings.min.js.map
